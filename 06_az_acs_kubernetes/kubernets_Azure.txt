Install Azure CLI 2.0
---------------------

https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-apt?view=azure-cli-latest

AZ_REPO=$(lsb_release -cs)
echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \
     sudo tee /etc/apt/sources.list.d/azure-cli.list

sudo apt-key adv --keyserver packages.microsoft.com --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893
sudo apt-get install apt-transport-https
sudo apt-get update && sudo apt-get install azure-cli

Install az acs kubernetes
-------------------------

az acs kubernetes install-cli

az --version

Deploy Kubernetes cluster for Linux containers
-----------------------------------------------

https://docs.microsoft.com/en-us/azure/container-service/kubernetes/container-service-kubernetes-walkthrough

1. create a resource group

az group create --name myResourceGroup --location westeurope

2. Create Kubernetes cluster

# creates a cluster named myK8sCluster with one Linux master node and ONE Linux agent nodes.
az acs create --orchestrator-type kubernetes --resource-group myResourceGroup --name myK8sCluster --generate-ssh-keys --agent-count 1

3. Connect to the cluster

az acs kubernetes get-credentials --resource-group=myResourceGroup --name=myK8sCluster

kubectl get nodes

Run Application
----------------

1. create a yml file: azure-vote.yml
------------------------------------
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: azure-vote-back
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: azure-vote-back
    spec:
      containers:
      - name: azure-vote-back
        image: redis
        ports:
        - containerPort: 6379
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: azure-vote-back
spec:
  ports:
  - port: 6379
  selector:
    app: azure-vote-back
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: azure-vote-front
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: azure-vote-front
    spec:
      containers:
      - name: azure-vote-front
        image: microsoft/azure-vote-front:v1
        ports:
        - containerPort: 80
        env:
        - name: REDIS
          value: "azure-vote-back"
---
apiVersion: v1
kind: Service
metadata:
  name: azure-vote-front
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: azure-vote-front

2. Run the app
--------------
(Get the source code: https://github.com/Azure-Samples/azure-voting-app-redis)

kubectl create -f azure-vote.yml

...
deployment "azure-vote-back" created
service "azure-vote-back" created
deployment "azure-vote-front" created
service "azure-vote-front" created
...

3. Test the app
----------------

# As the application is run, a Kubernetes service is created that exposes the application front end to the internet. This process can take a few minutes to complete.

kubectl get service azure-vote-front --watch

# Initially the EXTERNAL-IP for the azure-vote-front service appears as pending. Once the EXTERNAL-IP address has changed from pending to an IP address, use CTRL-C to stop the kubectl watch process. 

# browse to the external IP address to see the Azure Vote App

Delete the cluster at Azure
----------------------------
az group delete --name myResourceGroup --yes --no-wait


